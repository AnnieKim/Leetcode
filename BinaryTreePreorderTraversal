/*
 Author:     Matthew Jin, marthew777@gmail.com
 Date:       
 Problem:    Binary Tree Preorder Traversal
 Difficulty: Easy
 Source:     http://oj.leetcode.com/problems/candy/
 Notes:
 Given a binary tree, return the preorder traversal of its nodes' values.

 For example:
 Given binary tree {1,#,2,3},
    1
     \
      2
     /
    3
 return [1,2,3].
 
 Note: Recursive solution is trivial, could you do it iteratively?
 Solution: ...
*/
class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) {
        stack<TreeNode *> s;
        TreeNode *node = root;
        vector<int> res;
        while(node || !s.empty()){
            if(node){
                res.push_back(node->val);
                if(node->right)
                    s.push(node->right);
                node = node->left;
            }
            else{
                node = s.top();
                s.pop();
            }
        }
        return res;
    }
};
